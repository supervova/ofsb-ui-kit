// Set up base properties
$button-bg-base:              color('primary');
$button-font-size:            $font-size-base;
$button-font-weight:          normal;
$shadow-hover:                true;

$button-transition:           box-shadow .2s ease-out, background-color .2s ease-out;
$button-disabled-opacity:     .64;
$button-label-uppercase:      null; // set to uppercase
$button-radius:               $border-radius;

// Buttons sizes
$button-height-sm:            32px;
$button-height:               36px;
$button-height-lg:            48px;
$button-min-width:            36px;
$button-font-size-lg:         round($button-font-size / 3 * 4);

// Hard-coded
// $button-font-family
// $button-padding
// $button-border-width
// $button-sizes: ()
// $button-disabled-opacity
// $button-background-hover-lightness
// $button-border-width

// Calculated values
// Button colors, borders, shadows for hover, focus, active, disabled states

// -----------------------------------------------------------------------------
// BASE BUTTON STYLES: UNDECORATED BOX
// ----------------------------------------------------------------------------

@mixin button-base() {
  // If reboot is not used, add font-smoothing, tap-highlight-color and
  // box-sizing: border-box

  appearance: none;
  border: 0;
  display: inline-block;
  line-height: 1;
  text-align: center;
  white-space: nowrap;
  margin: 0;
  outline: 0;
  overflow: hidden;
  position: relative;
  user-select: none;
  vertical-align: middle;
  transition: $button-transition;

  &:active,
  &:focus {
    outline: 0;
  }

  &:hover:not(:disabled) {
    cursor: pointer;
  }

  &:focus,
  &:hover {
    text-decoration: none;
  }

  // If reboot or core.scss has not imported
  &::-moz-focus-inner {
    padding: 0;
  }

  &:disabled {
    // cursor: not-allowed isn't showing w/ pointer-events:none
    cursor: default;
    opacity: .44;
    pointer-events: none;
  }
}


// -----------------------------------------------------------------------------
// BUTTON FONT SETTINGS
// ----------------------------------------------------------------------------

// @param {Color} $weight [$button-font-weight] - Default font weight

@mixin button-font($weight: $button-font-weight) {
  @if $button-label-uppercase {
    text-transform: uppercase;
  }

  font-family: inherit;
  font-weight: $weight;
}

// -----------------------------------------------------------------------------
// BUTTON FILLS
// ----------------------------------------------------------------------------

// FLAT BUTTON. DEFAULT
// @param {Color} $background-base [$button-bg-base] - Background color in default state
// @param {Color | Boolean} $background-hover [false] - Custom background color onhover

@mixin button-flat($background-base: $button-bg-base, $background-hover: false) {
  background-color: color-tone($background-base, 5);
  border: 0;
  border-radius: $button-radius;
  color: color-ink(color-tone($background-base, 5), 'muted');

  &:hover {
    @if $shadow-hover {
      box-shadow: $shadow-z2;
    } @else if $background-hover {
      background-color: $background-hover;
    } @else {
      background-color: color-tone($background-base, 4);
    }
  }

  &:focus {
    box-shadow: 0 0 0 2px color-tone($background-base, 4);
  }

  &:active {
    box-shadow: inset 0 2px 4px rgba(#000, .12), 0 0 0 2px color-tone($background-base, 3);
    background-color: color-tone($background-base, 4);
  }
}

// GRADIENT BUTTON STYLES
// It's used in class .btn--primary for more prominent actions
// @param {Color} $background-base [$button-bg-base] - Background color which tones used in gradients

@mixin button-gradient($background-base: $button-bg-base) {
  background-color: $background-base;
  background-image: linear-gradient(scale-color($background-base, $lightness: +16%), scale-color($background-base, $lightness: -16%));
  border-radius: $button-radius;
  box-shadow: inset 0 2px 0 rgba(#fff, .16), inset 0 0 0 1px rgba(#000, .12);
  color: color-ink($background-base);
  z-index: 1;

  // Animated :hover state
  &::before {
    background-color: color-tone($background-base, 2);
    background-image: linear-gradient(scale-color($background-base, $lightness: +32%), $background-base);
    border-radius: $button-radius;
    box-shadow: inset 0 2px 0 rgba(#fff, .16), inset 0 0 0 1px rgba(#000, .12);
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    opacity: 0;
    transition: opacity .2s ease-out;
    z-index: -1;
  }

  &:hover {
    @if $shadow-hover {
      box-shadow: inset 0 2px 0 rgba(#fff, .16), inset 0 0 0 1px rgba(#000, .12), $shadow-z2;
    }

    &::before { opacity: 1; }
  }

  &:focus {
    box-shadow: 0 0 0 2px color-tone($background-base, -1);
  }

  &:active,
  &:active:focus {
    background-color: color-tone($background-base, -1);
    background-image: none;
    box-shadow: 0 0 0 2px color-tone($background-base, -2), inset 0 2px 4px rgba(#000, .12);

    &::before { opacity: 0; }
  }
}

// 2.5D
// @param {Color} $background-base [$button-bg-base] - Background color which tones used in gradients

@mixin button-2-point-5d($background-base: $button-bg-base) {
  background-color: $background-base;
  background-image: linear-gradient(scale-color($background-base, $lightness: +16%), scale-color($background-base, $lightness: -16%));
  border-radius: $button-radius;
  box-shadow: inset 0 1px 0 rgba(#fff, .16), inset 0 -4px 0 0 rgba(#000, .16), $shadow-z2;
  color: color-ink($background-base);
  padding-bottom: 4px;
  transition: box-shadow .2s ease-out;

  &:hover {
    box-shadow: inset 0 1px 0 rgba(#fff, .16), inset 0 -4px 0 0 rgba(#000, .16), $shadow-z2, inset 0 36px 36px rgba(#fff, .24);
  }

  &:focus {
    box-shadow: inset 0 1px 0 rgba(#fff, .16), inset 0 -4px 0 0 rgba(#000, .16), $shadow-z2, 0 0 0 2px color-tone($background-base, -1);
  }

  &:focus:hover {
    box-shadow: inset 0 1px 0 rgba(#fff, .16), inset 0 -4px 0 0 rgba(#000, .16), $shadow-z2, 0 0 0 2px color-tone($background-base, -1), inset 0 36px 36px rgba(#fff, .24);
  }

  &:active,
  &:active:focus {
    box-shadow: inset 0 1px 0 rgba(#fff, .16), inset 0 -1px 0 0 rgba(#000, .16), $shadow-z2, 0 0 0 2px color-tone($background-base, -1), inset 0 36px 36px rgba(#fff, .16);
    padding-bottom: 1px;
  }
}

// GHOST (OUTLINE) BUTTON
// It's used for tertiary actions
// @param {Color} $border-color [$button-bg-base] - Border color
// @param {Color} $color [color-ink(color(background-main), 'muted')] - Button label color

@mixin button-ghost($border-color: $button-bg-base, $color: color-ink(color(background-main), 'muted')) {
  background-color: transparent;
  border: 1px solid $border-color;
  border-radius: $button-radius;
  color: $color;

  &:hover {
    @if $shadow-hover {
      box-shadow: $shadow-z2;
    } @else {
      background-color: color-tone($border-color, 5);
    }
  }

  &:focus {
    box-shadow: 0 0 0 1px $border-color;
  }

  &:active {
    box-shadow: inset 0 2px 4px rgba(#000, .12);
    background-color: color-tone($border-color, 4);
  }
}


// -----------------------------------------------------------------------------
// BUTTON SIZE AND SPACING
// ----------------------------------------------------------------------------

// Margins should be set by utility classes, i.e. .ml-1, .mb-2.
// @param {Number} $font-size [$button-font-size] - Font size
// @param {Number} $padding [0 ($spacer * 2)] - Button paddings
// @param {Number} $height [$button-height] - Button height
// @param {Number} $min-width [$button-min-width] - Button minimum width

@mixin button-size($font-size: $button-font-size, $padding: 0 ($spacer * 2), $height: $button-height, $min-width: $button-min-width) {
  font-size: $font-size;
  padding: $padding;
  height: $height;
  min-width: $min-width;
}
