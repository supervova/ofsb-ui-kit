// Set up base properties
$button-bg:                   color-tone('primary', 2);
$button-font-size:            $font-size-base;
$button-font-weight:          400;
$button-border-width:         1px;

$button-transition:           all .24s ease-out;
$button-disabled-opacity:     .64;

// Buttons sizes
$button-height-sm:            32px;
$button-height:               36px;
$button-height-lg:            48px;
$button-tap-target:           48px;
$button-min-width:            48px;
$button-font-size-lg:         round($button-font-size * 1.309);


// Functions and native will set up all others
// $button-color: foreground-color();
// $button{-hover, -focus, -active, -disabled}?-{color, bg, border-color, box-shadow}
// ?
// ?

// Programmed values â€” coloring classes.
// $button-color set it in mixin using color-fg();

$button-hover-border-color:   color-tone('primary', 3);
$button-hover-background:     scale-color($button-background, $lightness: +15%);

/// Hard-coded
/// $button-font-family
/// $button-padding
/// $button-margin
/// $button-height{-sm, -lg}
/// $button-font-size{-sm, -lg}
/// $button-radius
/// $button-border-width
/// $button-sizes: ()
/// $button-disabled-opacity
/// $button-background-hover-lightness


/// BASE BUTTON STYLES: UNDECORATED BOX
@mixin button-base() {
  // If reboot or core.scss has not imported
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  box-sizing: border-box;

  appearance: none;

  // Expand touchable target to recommend by the Google w/ transparent border
  border: (($button-tap-target - $button-height) / 2) solid transparent;
  display: inline-block;
  font-weight: $button-font-weight;
  line-height: 1;
  text-align: center;
  text-transform: uppercase;
  white-space: nowrap;
  padding: 0 ($spacer * 2);
  outline: none;
  overflow: hidden;
  position: relative;
  user-select: none;
  vertical-align: middle;
  height: $button-height;
  min-width: $button-min-width;

  &:active {
    outline: none;
  }

  &:hover {
    cursor: pointer;
  }

  &:focus,
  &:hover {
    text-decoration: none;
  }

  &:focus {
    outline: 2px solid;
  }

  // If reboot or core.scss has not imported
  &::-moz-focus-inner {
    padding: 0;
  }

  &:disabled {
    cursor: default;
    opacity: .64;
    pointer-events: none;
  }
}

/// SET BUTTON COLORS AND LIGHTING
@mixin button-default() {

  @if $flat-style {
    @include button-outline-variant($value, $gray-900);
  }
  @else {
    @include button-outline-variant($value, $white);
  }

  &:focus {
    outline-color: $button-hover-border-color;
  }
}

/// SET BUTTON HEIGHT AND FONT SIZE
/// @param {Number} $height [$button-height] - Button height
/// @param {Null | Number} $font-size [null] - Button font size
/// @output {Color} - Sufficiently contrasting foreground the color of a certain
///   level of the visual hierarchy.
@mixin button-size($height: $button-height, $font-size: null) {
  @if ($font-size) {
    font-size: $font-size;
  }
  height: $height;
}
