// Set up base properties

// Block button
// .btn--block {
//   display: block;
//   width: 100%;
// }

// Valid options are 'ghost', 'flat', 'gradient', 'pseudo-3d'
$button-style: 'flat';

// Assign the tones of $colors to $button-bg-base using color() function.
// Or assign the shades or tints of $colors to it using both color()
// and color-tone() functions. You can also use color in standard web formats
// @example
//  $button-bg-base:          color-tone(color('primary'), -4);
//  $button-bg-base:          rgba(255, 102, 0, .8);
//  $button-bg-base:          #ccf;
$button-bg-base: color('primary');
$button-radius: $border-radius;
$button-hover-shadow: false;
$button-font-weight: normal;
$button-label-uppercase: false;
$button-disabled-opacity: .64;
$button-transition: box-shadow .2s ease-out, background-color .2s ease-out;

$button-sizes: ( 'small': ( 'font-size': $font-size-base, 'padding': 0 $spacer, 'height': 32px ), 'default': ( 'font-size': $font-size-base, 'padding': 0 ($spacer * 2), 'height': 36px ), 'large': ( 'font-size': $font-size-base / 3 * 4, 'padding': 0 ($spacer * 3), 'height': 48px ) );

// Hard-coded
// $button-font-family
// $button-padding
// $button-border-width
// $button-sizes: ()
// $button-disabled-opacity
// $button-background-hover-lightness
// $button-border-width

// Calculated values
// Button colors, borders, shadows for hover, focus, active, disabled states

// -----------------------------------------------------------------------------
// UNIVERSAL BUTTON FUNCTION
// -----------------------------------------------------------------------------

// Creates buttons of different styles, colors and sizes
// @param {Color} $color [$button-bg-base] - Color of button body. In gradient
// buttons it's used for calculation of gradient stops
// @param {String} $size ['default'] - Key for $button-sizes map
// @param {String} $style [$button-style] - The style of the button, depending
// @param {Boolean | Color} $color [false] - Override label color
//    on which one of the fill mixin is used. Valid options are 'ghost', 'flat',
//    'gradient', 'pseudo-3d'
@mixin button($bg: $button-bg-base, $size: 'default', $style: $button-style, $color: false) {
  @extend %button-base;

  @include button-font();
  @if ($style == 'gradient') {
    @include button-gradient($background-base: $bg);
  }
  @else if ($style == 'pseudo-3d') {
    @include button-2-point-5d($background-base: $bg);
  }
  @else if ($style == 'ghost') {
    @include button-ghost($border-color: $bg);
  }
  @else {
    @include button-flat($background-base: $bg);
  }

  @if $color {
    color: $color;
  }

  @include button-size($size);
}

// -----------------------------------------------------------------------------
// BASE BUTTON STYLES: UNDECORATED BOX
// -----------------------------------------------------------------------------

%button-base {
  // If reboot is not used, add font-smoothing, tap-highlight-color and
  // box-sizing: border-box

  appearance: none;
  border-radius: $button-radius;
  border: 0;

  display: inline-block;
  display: inline-flex;
  align-items: center;

  font-family: inherit;
  text-align: center;
  text-decoration: none;
  white-space: nowrap;

  margin: 0;
  outline: 0;
  overflow: visible;
  position: relative;
  user-select: none;
  vertical-align: middle;
  transition: $button-transition;

  &:active,
  &:focus {
    outline: 0;
  }

  &:hover:not(:disabled) {
    cursor: pointer;
  }

  &:focus,
  &:hover {
    text-decoration: none;
  }

  // If reboot or core.scss has not imported
  &::-moz-focus-inner {
    padding: 0;
  }

  &:disabled {
    // cursor: not-allowed isn't showing w/ pointer-events:none
    cursor: default;
    opacity: .44;
    pointer-events: none;
  }
}

// -----------------------------------------------------------------------------
// BUTTON FONT SETTINGS
// -----------------------------------------------------------------------------

// @param {String | Number} $weight [$button-font-weight] - Default font weight
@mixin button-font($weight: $button-font-weight) {
  @if $button-label-uppercase {
    text-transform: uppercase;
  }

  font-family: inherit;
  font-weight: $weight;
}

// -----------------------------------------------------------------------------
// BUTTON FILLS
// -----------------------------------------------------------------------------

// FLAT BUTTON. DEFAULT
// @param {Color} $background-base [$button-bg-base] - Background color in default state
// @param {Color | Boolean} $background-hover [false] - Custom background color onhover
@mixin button-flat($background-base: $button-bg-base, $background-hover: false) {
  background-color: $background-base;
  border: 0;
  color: color-ink(color-tone($background-base), 'muted');

  &:hover {
    @if $button-hover-shadow {
      box-shadow: $shadow-z2;
    }
    @else if $background-hover {
      background-color: $background-hover;
    }
    @else {
      background-color: color-tone($background-base, 1);
    }
  }

  &:focus {
    box-shadow: 0 0 0 2px color-tone($background-base, -1);
  }

  &:active {
    box-shadow: inset 0 2px 4px rgba(#000, .12), 0 0 0 2px color-tone($background-base, -2);
    background-color: color-tone($background-base, -1);
  }
}

// GRADIENT BUTTON
// It's used for more prominent actions
// @param {Color} $background-base [$button-bg-base] - Background color which tones used in gradients
@mixin button-gradient($background-base: $button-bg-base) {
  background-color: $background-base;
  background-image: linear-gradient(scale-color($background-base, $lightness: +16%), scale-color($background-base, $lightness: -16%));
  box-shadow: inset 0 2px 0 rgba(#fff, .16), inset 0 0 0 1px rgba(#000, .12);
  color: color-ink($background-base);
  z-index: 1;

  // Animated :hover state
  &::before {
    background-color: color-tone($background-base, 2);
    background-image: linear-gradient(scale-color($background-base, $lightness: +32%), $background-base);
    border-radius: $button-radius;
    box-shadow: inset 0 2px 0 rgba(#fff, .16), inset 0 0 0 1px rgba(#000, .12);
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    opacity: 0;
    transition: opacity .2s ease-out;
    z-index: -1;
  }

  &:hover {
    @if $button-hover-shadow {
      box-shadow: inset 0 2px 0 rgba(#fff, .16), inset 0 0 0 1px rgba(#000, .12), $shadow-z2;
    }

    &::before {
      opacity: 1;
    }
  }

  &:focus {
    box-shadow: 0 0 0 2px color-tone($background-base, -1);
  }

  &:active,
  &:active:focus {
    background-color: color-tone($background-base, -1);
    background-image: none;
    box-shadow: 0 0 0 2px color-tone($background-base, -2), inset 0 2px 4px rgba(#000, .12);

    &::before {
      opacity: 0;
    }
  }
}

// 2.5D
// @param {Color} $background-base [$button-bg-base] - Background color which tones used in gradients
@mixin button-2-point-5d($background-base: $button-bg-base) {
  background-color: $background-base;
  background-image: linear-gradient(scale-color($background-base, $lightness: +16%), scale-color($background-base, $lightness: -16%));
  box-shadow: inset 0 1px 0 rgba(#fff, .16), inset 0 -4px 0 0 rgba(#000, .16), $shadow-z2;
  color: color-ink($background-base);
  padding-bottom: 4px;
  transition: box-shadow .1s ease-out;

  &:hover {
    box-shadow: inset 0 1px 0 rgba(#fff, .16), inset 0 -4px 0 0 rgba(#000, .16), $shadow-z2, inset 0 36px 36px rgba(#fff, .24);
  }

  &:focus {
    box-shadow: inset 0 1px 0 rgba(#fff, .16), inset 0 -4px 0 0 rgba(#000, .16), $shadow-z2, 0 0 0 2px color-tone($background-base, -1);
  }

  &:focus:hover {
    box-shadow: inset 0 1px 0 rgba(#fff, .16), inset 0 -4px 0 0 rgba(#000, .16), $shadow-z2, 0 0 0 2px color-tone($background-base, -1), inset 0 36px 36px rgba(#fff, .24);
  }

  &:active,
  &:active:focus {
    box-shadow: inset 0 1px 0 rgba(#fff, .16), inset 0 -1px 0 0 rgba(#000, .16), $shadow-z2, 0 0 0 2px color-tone($background-base, -1), inset 0 36px 36px rgba(#fff, .16);
    padding-top: 3px;
    padding-bottom: 1px;
  }
}

// GHOST (OUTLINE) BUTTON
// It's used for tertiary actions
// @param {Color} $border-color [$button-bg-base] - Border color
// @param {Color} $color [color-ink(color(background-main), 'muted')] - Button label color
@mixin button-ghost($border-color: $button-bg-base, $color: color-ink(color(background-main), 'muted')) {
  background-color: transparent;
  border: 1px solid $border-color;
  color: $color;

  &:hover {
    @if $button-hover-shadow {
      box-shadow: $shadow-z2;
    }
    @else {
      background-color: color-tone($border-color, 5);
    }
  }

  &:focus {
    box-shadow: 0 0 0 1px $border-color;
  }

  &:active {
    box-shadow: inset 0 2px 4px rgba(#000, .12);
    background-color: color-tone($border-color, 4);
  }
}

// -----------------------------------------------------------------------------
// BUTTON SIZE AND SPACING
// -----------------------------------------------------------------------------

// Margins should be set by utility classes, i.e. .ml-1, .mb-2.
// @param {String} $size ['default'] - Key for nesting map in $button-sizes map
@mixin button-size($size: 'default') {
  $settings: map-get($button-sizes, $size);

  font-size: map-get($settings, 'font-size');
  line-height: 1;
  padding: map-get($settings, 'padding');
  height: map-get($settings, 'height');
  min-width: map-get($settings, 'height');
}
